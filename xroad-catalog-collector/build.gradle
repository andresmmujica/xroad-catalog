buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'spring-boot'


group = 'fi.vrk.xroad'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8



repositories {
    mavenCentral()
    mavenLocal()
}

// tag::xsd[]
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/list-clients-schema.xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::xsd[]

task afterEclipseImport {
    dependsOn "genJaxb"
}

// tag::jaxb[]
configurations {
    jaxb
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version:'1.3.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version:'1.3.2.RELEASE'
    compile("org.springframework:spring-web")
    compile group: 'org.springframework', name: 'spring-jdbc', version:'4.2.4.RELEASE'
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version:'2.3.14'
    compile group: 'com.typesafe.akka', name: 'akka-slf4j_2.11', version:'2.3.14'
    compile group: 'c3p0', name: 'c3p0', version:'0.9.1.2'
    compile group: 'com.h2database', name: 'h2', version:'1.4.177'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.2'
    compile 'fi.vrk.xroad:xroad-catalog-persistence:1.0-SNAPSHOT'
    compile 'org.projectlombok:lombok:1.16.6'
    jaxb("com.sun.xml.bind:jaxb-xjc:2.2.4-1")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
}

idea {
    project {
        //if you want to set specific jdk and language level
        jdkName = '1.8'
        languageLevel = '1.8'
    }
    module {
        downloadSources = true
    }
}

