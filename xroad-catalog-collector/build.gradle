buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE")
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.12.1"
}

license {
    header project.file('LICENSE.txt')
    include '**/*.java'
    exclude '**/wsimport/**/*'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'sonar-runner'
apply plugin: 'jacoco'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    wsimport
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java', 'build/generated-sources/wsimport']
    }
}

jar {
    baseName = 'xroad-catalog-collector'
    from project.file('LICENSE.txt')
}


task wsImport {
    ext.sourcedestdir = "${buildDir}/generated-sources/wsimport"
    ext.destdir = "${buildDir}/generated-classes/wsimport"
    ext.wsdl = "${projectDir}/src/main/resources/schema/list-methods.wsdl"

    inputs.files wsdl
    outputs.dir sourcedestdir

    doLast() {
        project.ant {
            taskdef name: "wsimport", classname: "com.sun.tools.ws.ant.WsImport",
                    classpath: configurations.wsimport.asPath
            mkdir(dir: destdir)
            mkdir(dir: sourcedestdir)

            wsimport(sourcedestdir: sourcedestdir,
                    destdir: destdir,
                    wsdl: wsdl,
                    package: "fi.vrk.xroad.catalog.collector.wsimport",
                    keep: "true"
            ) {
                produces(dir: sourcedestdir, includes: "**/*.java")
            }
        }
    }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version:'1.3.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version:'1.3.2.RELEASE'
    compile("org.springframework:spring-web")
    compile("org.springframework.boot:spring-boot-starter-ws")
    compile group: 'org.springframework', name: 'spring-jdbc', version:'4.2.4.RELEASE'
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version:'2.4.2'
    compile group: 'com.typesafe.akka', name: 'akka-slf4j_2.11', version:'2.4.2'
    compile group: 'c3p0', name: 'c3p0', version:'0.9.1.2'
    compile group: 'com.h2database', name: 'h2', version:'1.4.177'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.2'
    compile project(':xroad-catalog-persistence')
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'org.apache.cxf:cxf-rt-frontend-jaxws:3.1.4'
    compile 'org.apache.cxf:cxf-rt-transports-http:3.1.4'
    compile 'org.apache.cxf:cxf-core:3.1.4'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    testCompile 'com.typesafe.akka:akka-testkit_2.11:2.4.2'
    testCompile 'org.powermock:powermock-core:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    wsimport "com.sun.xml.ws:jaxws-tools:2.1.7"
}



compileJava.dependsOn wsImport


test {
    systemProperty 'spring.config.name', 'collector,catalogdb'
}

bootRun {
    systemProperty 'spring.config.name', 'collector,catalogdb'
}